import React from 'react';

interface CountryFlagProps {
  countryCode: string;
  className?: string;
  size?: 'sm' | 'md' | 'lg';
}

const CountryFlag: React.FC<CountryFlagProps> = ({ 
  countryCode, 
  className = '', 
  size = 'md' 
}) => {
  const sizeClasses = {
    sm: 'w-4 h-3',
    md: 'w-6 h-4',
    lg: 'w-8 h-6'
  };

  // ÏúàÎèÑÏö∞ÏóêÏÑú Íµ≠Í∏∞ Ïù¥Î™®ÏßÄÍ∞Ä Íπ®ÏßÄÎäî Í≤ΩÏö∞Î•º ÎåÄÎπÑÌïú Ìè¥Î∞±
  const getFlagEmoji = (code: string) => {
    const flagMap: { [key: string]: string } = {
      'KR': 'üá∞üá∑',
      'JP': 'üáØüáµ', 
      'CN': 'üá®üá≥',
      'US': 'üá∫üá∏',
      'GB': 'üá¨üáß',
      'DE': 'üá©üá™',
      'FR': 'üá´üá∑',
      'CA': 'üá®üá¶',
      'AU': 'üá¶üá∫',
      'SG': 'üá∏üá¨'
    };
    return flagMap[code] || 'üè≥Ô∏è';
  };

  // Î∏åÎùºÏö∞Ï†ÄÍ∞Ä Íµ≠Í∏∞ Ïù¥Î™®ÏßÄÎ•º ÏßÄÏõêÌïòÎäîÏßÄ ÌôïÏù∏
  const supportsFlags = () => {
    if (typeof window === 'undefined') return true;
    
    const canvas = document.createElement('canvas');
    const ctx = canvas.getContext('2d');
    if (!ctx) return false;
    
    ctx.fillText('üá∞üá∑', 0, 0);
    const imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
    
    // ÌîΩÏÖÄ Îç∞Ïù¥ÌÑ∞Í∞Ä ÏûàÏúºÎ©¥ ÏßÄÏõêÌï®
    return imageData.data.some(pixel => pixel !== 0);
  };

  // SVG Ìè¥Î∞± ÏÇ¨Ïö©
  if (typeof window !== 'undefined' && !supportsFlags()) {
    return (
      <div 
        className={`inline-flex items-center justify-center bg-gray-200 text-gray-600 text-xs font-bold rounded ${sizeClasses[size]} ${className}`}
        title={`${countryCode} flag`}
      >
        {countryCode}
      </div>
    );
  }

  return (
    <span 
      className={`inline-block ${className}`}
      style={{ fontSize: size === 'sm' ? '16px' : size === 'md' ? '20px' : '24px' }}
      title={`${countryCode} flag`}
    >
      {getFlagEmoji(countryCode)}
    </span>
  );
};

export default CountryFlag;